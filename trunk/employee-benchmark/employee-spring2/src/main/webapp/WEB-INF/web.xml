<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app PUBLIC
	"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
	"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>
	<!--
	  - Location of the XML file that defines the root application context.
	  - Applied by ContextLoaderServlet.
		-
		- Can be set to "/WEB-INF/applicationContext-hibernate.xml" for the Hibernate
		- implementation, "/WEB-INF/applicationContext-ojb.xml" for the Apache OJB one,
		- "/WEB-INF/applicationContext-toplink.xml" for the Oracle TopLink one,
		- "/WEB-INF/applicationContext-jpa.xml" for the JPA one,
		- or "/WEB-INF/applicationContext-jdbc.xml" for the JDBC one.
	  -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext-hibernate-jpa.xml</param-value>
	</context-param>

	<!--
	  - Loads the root application context of this web app at startup,
	  - by default from "/WEB-INF/applicationContext.xml".
		- Note that you need to fall back to Spring's ContextLoaderServlet for
		- J2EE servers that do not follow the Servlet 2.4 initialization order.
		-
	  - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
	  - to access it anywhere in the web application, outside of the framework.
	  -
	  - The root context is the parent of all servlet-specific contexts.
	  - This means that its beans are automatically available in these child contexts,
	  - both for getBean(name) calls and (external) bean references.
	  -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!--
	  - Servlet that dispatches request to registered handlers (Controller implementations).
	  - Has its own application context, by default defined in "{servlet-name}-servlet.xml",
	  - i.e. "petclinic-servlet.xml".
	  -
	  - A web app can contain any number of such servlets.
	  - Note that this web app has a shared root application context, serving as parent
	  - of all DispatcherServlet contexts.
	  -->
	<servlet>
		<servlet-name>employee</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<!--
	  - Maps the petclinic dispatcher to *.htm. All handler mappings in
	  - petclinic-servlet.xml will by default be applied to this subpath.
	  - If a mapping isn't a /* subpath, the handler mappings are considered
	  - relative to the web app root.
	  -
	  - NOTE: A single dispatcher can be mapped to multiple paths, like any servlet.
	  -->
	<servlet-mapping>
		<servlet-name>employee</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>

	<welcome-file-list>
		<!-- Redirects to "welcome.htm" for dispatcher handling -->
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<!-- Displays a stack trace -->
		<location>/WEB-INF/jsp/uncaughtException.jsp</location>
	</error-page>

	<!--
		- Reference to PetClinic database.
		- Only needed if not using a local DataSource but a JNDI one instead.
		-->
	<!--
	<resource-ref>
		<res-ref-name>jdbc/petclinic</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	-->

</web-app>
