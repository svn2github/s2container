<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>S2JDBC-Gen - セットアップ</title>
	</properties>
	<body>
		<section name="セットアップ">
			<p></p>
			<ul>
				<li>
					<p>
						<a href="#概要">概要</a>
					</p>
				</li>
				<li>
					<p>
						<a href="#ビルドファイルの準備">ビルドファイルの準備</a>
					</p>
				</li>
				<li>
					<p>
						<a href="#Antタスクの実行方法">Antタスクの実行方法</a>
					</p>
				</li>
				<li>
					<p>
						<a href="#Eclipseの設定">Eclipseの設定</a>
					</p>
				</li>
				<li>
					<p>
						<a href="#CSVエディタの設定">CSVエディタの設定</a>
					</p>
				</li>
			</ul>
		</section>
		<section name="概要">
			<p>
				S2JDBC-Genのセットアップの前に<a href="../s2jdbc_setup.html">S2JDBCのセットアップ</a>をしてください。
			</p>
			<p>
				S2JDBC-Genの動作にはSeasar2、FreeMarkerが必要です。
				S2JDBC-Gen-x.x.x.zipを解凍し、S2JDBC-Genのjarファイル（s2jdbc-gen-x.x.x.jar）とFreeMarkerのjarファイル（freemarker-2.3.x.jar）を任意の場所に配置してください。
				S2JDBC-GenのAntタスクをコマンドラインから動作させる場合は、<a href="http://ant.apache.org/">Apache Ant</a>のインストールが別途必要です。
			</p>
		</section>
		<section name="ビルドファイルの準備">
			<p>
				S2JDBC-GenのAntタスクを実行するにはAntのビルドファイルが必要です。
				簡易的なビルドファイルを用いて説明します。
				実践的なビルドファイルの例は<a href="task.html#タスクの使用例">タスクの使用例</a>を参照ください。
			</p>
<source><![CDATA[<project name="sample" default="gen-ddl" basedir=".">

    <path id="classpath">
        <pathelement location="build/classes"/>
        <fileset dir="lib"/>
    </path>

    <taskdef resource="s2jdbc-gen-task.properties" classpathref="classpath"/>

    <target name="gen-entity">
        <gen-entity
            rootpackagename="examples"
            classpathref="classpath"
        />
    </target>

    <target name="gen-ddl">
        <gen-ddl
            classpathdir="build/classes"
            rootpackagename="examples"
            classpathref="classpath"
        />
    </target>

    <target name="migrate">
        <migrate
            classpathdir="build/classes"
            rootpackagename="examples"
            classpathref="classpath"
        />
    </target>

</project>]]></source>
			<subsection name="解説:クラスパスの設定">
				<p>
					S2JDBC-GenのAntタスクの多くは、実行時にエンティティクラスを参照します。
					また、S2JDBCの動作に必要なjarファイルに加え、s2jdbc-gen-x.x.x.jarとfreemarker-2.3.x.jarが必要です。
					すべてのAntタスクからエンティティクラスやjarファイルを参照できるように、あらかじめクラスパスを設定しておきます。
				</p>
<source><![CDATA[<path id="classpath">
    <pathelement location="build/classes"/>
    <fileset dir="lib"/>
</path>]]></source>
				<p>
					ここでは、"build/classes"がエンティティクラスを格納するディレクトリとします。
					また、"lib"が必要なjarファイルを格納するディレクトリだとします。
				</p>
			</subsection>
			<subsection name="解説:タスク定義の参照">
				<p>
					S2JDBC-Genのタスク定義は、s2jdbc-gen-core-x.x.x.jar内のs2jdbc-gen-task.propertiesに含まれています。
					これを参照するためのに&lt;taskdef&gt;の定義が必要です。
				</p>
<source><![CDATA[<taskdef resource="s2jdbc-gen-task.properties" classpathref="classpath"/>]]></source>
				<p>
					classpathref属性でs2jdbc-gen-core-x.x.x.jarを含めたクラスパスを参照するようにします。
				</p>
			</subsection>
			<subsection name="解説:タスクの記述">
				<p>
					S2JDBC-Genのタスクを&lt;target&gt;要素の内側に記述します。
				</p>
<source><![CDATA[<target name="gen-entity">
    <gen-entity
        rootpackagename="examples"
        classpathref="classpath"
    />
</target>]]></source>
				<p>
					classpathref属性の指定を忘れないようにしてください。
					S2JDBC-Genのタスク一覧や、タスクに記述できる属性については<a href="task.html#タスク">タスク</a>を参照ください。
				</p>
			</subsection>
		</section>
		<section name="Antタスクの実行方法">
			<p>
				以下、ビルドファイルの名前をs2jdbc-gen-build.xmlだとします。
			</p>
			<subsection name="コマンドラインからの実行">
				<p>
					Antをコマンドラインから実行する場合は、ビルドファイルが存在する階層に移動し、次のコマンドを実行してください。
			<source><![CDATA[
ant -f s2jdbc-gen-build.xml ターゲット名
]]></source>
				</p>
			</subsection>
			<subsection name="Eclipseからの実行">
				<p>
					AntをEclipse上で起動する場合は、s2jdbc-gen-build.xmlをAntエディタで開き、実行してください。<br />
					ただし、Windows上でEclipse 3.4を利用している場合は、Console EncodingにMS932を指定して実行する必要があります。
					MS932を指定しない場合、ログがコンソールに正しく出力されません。
					Console Encodingを指定して実行する手順は次のようになります。
					<ol>
						<li>s2jdbc-gen-build.xmlをAntエディタで開きます。</li>
						<li>メニューから「Run」-「Extenal Tools」-「Extenal Tools Configurations...」を選択します。Extenal Tools Configurationsダイアログが開きます。</li>
						<li>左側のメニューにある「Ant Build」という項目をダブルクリックし、s2jdbc-gen-build.xmlに対する設定を新規作成します。</li>
						<li>ダイアログの「Common」タブの「Console Encoding」にMS932を指定します。MS932がコンボボックスに表示されていない場合は一旦ワークスペースやプロジェクトのエンコーディングをMS932に変更すると登場するようになります。</li>
						<li>ダイアログの「Run」ボタンを押しAntを実行します。</li>
					</ol>
				</p>
			</subsection>
		</section>
		<section name="Eclipseの設定">
			<p>
				Eclipseを利用する場合、利便性向上のために以下に説明する設定変更を推奨します。
			</p>
			<subsection name="Organize Importsの設定">
				<p>
					S2JDBC-Genのいくつかのタスクは、次のような、「.*」を使った一括のstatic importを利用したクラスを生成します。
				</p>
			<source><![CDATA[
import static example.entity.EmployeeNames.*;

public class EmployeeService {
  ...
}]]></source>
				<p>
					しかし、EclipseのOrganize Imports機能は、この定義を、実際に使用されている個別のstaticメンバのインポート文へ変換してしまいます。
				</p>
			<source><![CDATA[
import static example.entity.EmployeeNames.employeeId;
import static example.entity.EmployeeNames.employeeName;
import static example.entity.EmployeeNames.salary;

public class EmployeeService {
  ...
}]]></source>
				<p>
					この変換により、EmployeeNamesの他のstaticメンバがコンテンツアシストの候補にならなくなります（「.*」を使った一括のstatic importのままであれば、候補に挙がります）。
					これは不便であるため、Eclipseを利用する場合、「.*」を使った一括のインポート文が個別のstaticメンバのインポート文に変換されないように「Organize Imports」の設定を行います。
				</p>
				<p>
					「Organize Imports」の設定画面へは、メニューの「Window」-「Preferences」からダイアログを開き、ツリーメニューで「Java」-「Code Style」-「Organize Imports」と辿ってください。
					「Organize Imports」の設定画面を開いたら、「Number of static imports for .*」の項目に1を設定します。
				</p>
				<img src="../images/s2jdbc_gen_organize_imports.png"
					width="546" height="649" alt="Organize Importsの設定" />
			</subsection>
		</section>
		<section name="CSVエディタの設定">
			<p>
				Windows環境では、CSVエディタとして<a href="http://www.asukaze.net/soft/cassava/">Cassava Editor</a>を利用することを推奨します。
			</p>
			<subsection name="Cassava Editor">
				<p>
					S2JDBC-GenのいくつかのタスクはデータベースのダンプデータをCSV形式で出力します。
					データを編集する際は、CSVエディタであるCassava Editorを利用するのが便利です。
					以下に、推奨のCassava Editorの設定方法を示します。
				</p>
				<p>
					<ul>
						<li>
							メニューから「表示」-「一行目を固定」を選びます。これによりヘッダー行が固定されます。
						</li>
						<li>
							メニューから「オプション」-「オプション」を選びます。ダイアログが表示されたら「データ形式」を選択し、「必要なセルのみ""で囲む」にチェックします。これにより、nullのデータをnullのデータとして維持できます。
						</li>
						<li>
							メニューから「オプション」-「セーブ時文字コード」でタスクが利用するエンコーディング（デフォルトではUTF-8）と同じものを指定します。これにより、エンコーディングの誤変換を防ぎます。
						</li>
					</ul>
				</p>
				S2JDBC-Genで扱うCSV形式の詳細については<a href="tasks/gen_ddl.html#ダンプファイル">ダンプファイル</a>を参照してください。
			</subsection>
		</section>
	</body>
</document>
