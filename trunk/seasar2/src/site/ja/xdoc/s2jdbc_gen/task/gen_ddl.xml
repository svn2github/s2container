<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>S2JDBC-Gen - Gen-Ddl</title>
	</properties>
	<body>
		<section name="Gen-Ddl">
			<ul>
				<li>
					<p>
						<a href="#説明">説明</a>
						<ul>
							<li>
								<p>
									<a href="#概要">概要</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#ディレクトリ構成">ディレクトリ構成</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#バージョン番号">バージョン番号</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#DDLファイル">DDLファイル</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#ダンプファイル">ダンプファイル</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#タスク実行時のファイルのコピー">タスク実行時のファイルのコピー</a>
								</p>
							</li>
						</ul>
					</p>
				</li>
				<li>
					<p>
						<a href="#パラメータ">パラメータ</a>
						<ul>
							<li>
								<p>
									<a href="#トップレベルのパラメータ">トップレベルのパラメータ</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#ネストした要素として指定されるパラメータ">ネストした要素として指定されるパラメータ</a>
								</p>
							</li>
						</ul>
					</p>
				</li>
				<li>
					<p>
						<a href="#例">例</a>
						<ul>
							<li>
								<p>
									<a href="#SQLのキーワードと識別子の大文字小文字を指定する">SQLのキーワードと識別子の大文字小文字を指定する</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#独自のテンプレートファイルを使用する">独自のテンプレートファイルを使用する</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#MySQLでストレージエンジンを指定する">MySQLでストレージエンジンを指定する</a>
								</p>
							</li>
							<li>
								<p>
									<a href="#バージョンディレクトリのパターンを指定する">バージョンディレクトリのパターンを指定する</a>
								</p>
							</li>
						</ul>
					</p>
				</li>
			</ul>
		</section>
		<section name="説明">
			<subsection name="概要">
				<p>
					エンティティクラスのメタデータを読み取りDDLを生成します。
					このタスクでは、次のオブジェクトのcreate文とdrop文を生成します。
					<ul>
						<li>
							テーブル
						</li>
						<li>
							シーケンス
						</li>
						<li>
							一意キー
						</li>
						<li>
							外部キー
						</li>
					</ul>
				</p>
				<p>
					また、dump属性が"true"の場合、DDLファイルの生成と同時にデータベースのデータをCSV形式でダンプ出力します。
					DDLファイルとダンプファイルは、migrateDir属性に指定されたディレクトリ以下に出力されます。
				</p>
				<p>
					このタスクは、DDLを生成しますが、生成したDDLをデータベースへ適用させるわけではありません。
					DDLのデータベースへの適用はMigrateタスクが担います。
				</p>
			</subsection>
			<subsection name="ディレクトリ構成">
				<p>
					デフォルトの属性値を利用する場合、Gen-Ddlタスクにより作成されるディレクトリの構成は次のようになります。
				</p>
<source><![CDATA[db
└─migrate
    ├─0000
    │  ├─create
    │  └─drop
    │      ├─010-foreignkey
    │      ├─020-sequence
    │      ├─030-uniquekey
    │      └─040-table
    ├─0001
    │  ├─create
    │  │  ├─010-table
    │  │  ├─020-uniquekey
    │  │  ├─030-sequence
    │  │  ├─040-dump
    │  │  └─050-foreignkey
    │  └─drop
    │      ├─010-foreignkey
    │      ├─020-sequence
    │      ├─030-uniquekey
    │      └─040-table
    └─0002
        ├─create
        │  ├─010-table
        │  ├─020-uniquekey
        │  ├─030-sequence
        │  ├─040-dump
        │  └─050-foreignkey
        └─drop
            ├─010-foreignkey
            ├─020-sequence
            ├─030-uniquekey
            └─040-table]]></source>
				<p>
					db/migrateディレクトリ以下の、0000、0001、0002はDDLのバージョンを表すディレクトリです。
					バージョンを表すディレクトリは、Gen-Ddlタスクを実行するごとに新しく作成されます。
				</p>
				<p>
					バージョンを表すディレクトリの下にはcreateディレクトリとdropディレクトリがあります。
					createディレクトリでは、データベースオブジェクトの作成用DDLとダンプデータを管理し、
					dropディレクトリでは、データベースオブジェクトの削除用DDLを管理します。
				</p>
				<p>
					createディレクトリとdropディレクトリの下には、各オブジェクト専用のDDLもしくはダンプデータを管理するためのディレクトリがあります。
				</p>
			</subsection>
			<subsection name="バージョン番号">
				<p>
					バージョン番号は、ddlInfoFile属性に指定したテキストファイルで管理されます。
					バージョン番号は0から始まり、上限の2147483647まで1ずつ増分します。
					バージョン番号を管理するテキストファイルは、番号を振り直すなどの特別な理由がない限り編集しないでください。
				</p>
			</subsection>
			<subsection name="DDLファイル">
				<h4>テーブル</h4>
				<p>
					Gen-Ddlタスクでは次の3種類のテーブルに対してDDLを生成します。
					<ul>
						<li>
							エンティティに対応するテーブル
						</li>
						<li>
							エンティティの識別子生成用テーブル
						</li>
						<li>
							スキーマのバージョンを管理するテーブル
						</li>
					</ul>
				</p>
				<p>
					エンティティの識別子生成用テーブルのDDLは、エンティティの識別子に@TableGeneratorを指定した場合に生成されます。
				</p>
				<p>
					スキーマのバージョンを管理するテーブルのDDLは、Gen-Ddlタスクを実行すると必ず生成されます。
					これは、データベーススキーマのバージョンを管理するテーブルです。
					テーブル名やカラム名はschemaInfoFullTableName属性とschemaInfoColumnName属性で決まります。
				</p>
				<h4>シーケンス</h4>
				<p>
					シーケンスのDDLは、エンティティの識別子に@SequenceGeneratorを指定した場合に生成されます。
				</p>
				<h4>一意キー</h4>
					<p>
						一意キーのDDLを生成する方法は3つあります。
						<ul>
							<li>
								@Columnのunique属性にtrueを指定する
							</li>
							<li>
								@TableのuniqueConstraints属性に値を指定する
							</li>
							<li>
								@TableGeneratorのuniqueConstraints属性に値を指定する
							</li>
						</ul>
						いずれの方法でも一意キーのDDLが生成されます。
					</p>
				<h4>外部キー</h4>
					<p>
						外部キーのDDLは、エンティティクラスで関連プロパティを定義した場合に生成されます。
					</p>
			</subsection>
			<subsection name="ダンプファイル">
					<p>
						ダンプファイルはCSV形式で出力されます。
						CSVは次の規則を持ちます。
					</p>
					<table border="1" cellpadding="2" cellspacing="0">
						<tr><th>項目</th><th>説明</th></tr>
						<tr><td>ファイル名</td><td>ファイル名はテーブル名として利用されます（カタログ名やスキーマ名を含むこともあります）。したがって、フィル名は修正しないでください。</td></tr>
						<tr><td>ヘッダー行</td><td>最初の一行目はテーブルのカラムを表すヘッダー行になります。</td></tr>
						<tr><td>ヘッダー行と明細行</td><td>ヘッダー行と明細行の列数は同じでなければいけません。</td></tr>
						<tr><td>ダブルクォテーション</td><td>すべてのデータはダブルクォテーションで囲むことができます。</td></tr>
						<tr><td>文字列型</td><td>ダブルクォテーションを含む場合は、ダブルクォテーションを2重にすることでエスケープし、文字列全体をダブルクォテーションで囲む必要があります。カンマ、改行を含む場合はダブルクォテーションで囲む必要があります。空文字を表現する場合は、ダブルクォテーションで囲む必要があります。たとえば、「"","",""」からなる行は空文字が3つ並んでいるとみなされます。</td></tr>
						<tr><td>日付型</td><td>yyyy/MM/ddの形式でなければいけません。</td></tr>
						<tr><td>時刻型</td><td>hh:mm:ssの形式でなければいけません。</td></tr>
						<tr><td>タイムスタンプ型</td><td>yyyy/MM/dd hh:mm:ss.fffffffffの形式でなければいけません。ただし、.fffffffffについてはなくてもかまいません。</td></tr>
						<tr><td>バイト配列型</td><td>Base64でエンコードされた形式で表現されます。</td></tr>
						<tr><td>nullの表現</td><td>長さ0の値がnullとみなされます。たとえば、「,,」からなる行はnullが3つあるとみなされます。</td></tr>
					</table>
					<p>
						データを修正する際は、上記の規則にしたがってください。
					</p>
			</subsection>
			<subsection name="タスク実行時のファイルのコピー">
				<p>
					Gen-Ddlタスクは、DDLやダンプデータを生成後、生成対象外かつ前バージョンのディレクトリに含まれるファイルを新しいバージョンのディレクトリにコピーします。
					この仕組みにより、Gen-Ddlで生成される以外のファイルをGen-Ddlで生成されるファイルと同様の方法で管理できます。
					たとえば、バージョン0002のcreateディレクトリの下に061-procedureや062-view、dropディレクトリの下に001-viewや002-procedureといったディレクトリを作成し、そこにストアドプロシージャーやビューの作成用DDLと削除用DDLファイルを置くとします。
					Gen-Ddlタスクを実行すると、これらはバージョン0003のcreateディレクトリやdropディレクトリ以下にそのままコピーされます。
				</p>
<source><![CDATA[db
└─migrate
    └─0002
        ├─create
        │  ├─010-table
        │  ├─020-uniquekey
        │  ├─030-sequence
        │  ├─040-dump
        │  ├─050-foreignkey
        │  ├─061-procedure
        │  └─062-view
        └─drop
            ├─001-view
            ├─002-procedure
            ├─010-foreignkey
            ├─020-sequence
            ├─030-uniquekey
            └─040-table]]></source>
			</subsection>
		</section>
		<section name="パラメータ">
			<subsection name="トップレベルのパラメータ">
				<table border="1" cellpadding="2" cellspacing="0">
					<tr><th>属性</th><th>説明</th><th>デフォルト値</th><th>必須</th></tr>
					<tr><td>classpathDir</td><td>エンティティクラスを含むクラスパスのディレクトリです。このディレクトリはタスクの実行時のクラスパスに含まれている必要があります。</td><td>-</td><td>YES</td></tr>
					<tr><td>rootPackageName</td><td>ルートパッケージ名です。</td><td>""</td><td>NO</td></tr>
					<tr><td>entityPackageName</td><td>エンティティクラスのパッケージ名です。エンティティクラスは、rootPackageNameとこの値をピリオドで連結したパッケージに配置されているとみなされます。</td><td>"entity"</td><td>NO</td></tr>
					<tr><td>entityClassNamePattern</td><td>このタスクで対象とするエンティティクラス名の正規表現です。</td><td>".*"</td><td>NO</td></tr>
					<tr><td>ignoreEntityClassNamePattern</td><td>このタスクで対象としないエンティティクラス名の正規表現です。</td><td>""</td><td>NO</td></tr>
					<tr><td>createTableDirName</td><td>テーブルを作成するDDLを格納するディレクトリ名です。</td><td>"010-table"</td><td>NO</td></tr>
					<tr><td>createUniqueKeyDirName</td><td>一意キーを作成するDDLを格納するディレクトリ名です。</td><td>"020-uniquekey"</td><td>NO</td></tr>
					<tr><td>createSequenceDirName</td><td>シーケンスを作成するDDLを格納するディレクトリ名です。</td><td>"030-sequence"</td><td>NO</td></tr>
					<tr><td>createForeignKeyDirName</td><td>外部キーを作成するDDLを格納するディレクトリ名です。</td><td>"050-foreignkey"</td><td>NO</td></tr>
					<tr><td>dropTableDirName</td><td>テーブルを削除するDDLファイル名です。</td><td>"040-table"</td><td>NO</td></tr>
					<tr><td>dropUniqueKeyDirName</td><td>一意キーを削除するDDLファイル名です。</td><td>"030-uniquekey"</td><td>NO</td></tr>
					<tr><td>dropSequenceDirName</td><td>シーケンスを削除するDDLファイル名です。</td><td>"020-sequence"</td><td>NO</td></tr>
					<tr><td>dropForeignKeyDirName</td><td>外部キーを削除するDDLファイル名です。</td><td>"010-foreignkey"</td><td>NO</td></tr>
					<tr><td>ddlFileEncoding</td><td>DDLファイルのエンコーディングです。</td><td>"UTF-8"</td><td>NO</td></tr>
					<tr><td>sqlKeywordCase</td><td>SQLのキーワードを大文字にするか小文字にするかを指定する列挙型の値です。大文字にするには"uppercase"、小文字にするには"lowercase"を指定します。テンプレートに記述された文字をそのまま使用する場合は"originalcase"を指定します。</td><td>"originalcase"</td><td>NO</td></tr>
					<tr><td>sqlIdentifierCase</td><td>SQLの識別子を大文字にするか小文字にするかを指定する列挙型の値です。大文字にするには"uppercase"、小文字にするには"lowercase"を指定します。エンティティに記述した文字をそのまま使用する場合は"originalcase"を指定します。</td><td>"originalcase"</td><td>NO</td></tr>
					<tr><td>dump</td><td>"true"の場合、データベースのデータのダンプ出力を行います。</td><td>"true"</td><td>NO</td></tr>
					<tr><td>dumpDirName</td><td>ダンプファイルの出力先のディレクトリです。</td><td>"040-dump"</td><td>NO</td></tr>
					<tr><td>dumpFileEncoding</td><td>ダンプファイルのエンコーディングです。</td><td>"UTF-8"</td><td>NO</td></tr>
					<tr><td>createTableTemplateFileName</td><td>テーブルを作成するDDLのテンプレートファイル名です。</td><td>"sql/create-table.ftl"</td><td>NO</td></tr>
					<tr><td>createSchemaInfoTableTemplateFileName</td><td>スキーマ情報テーブルを作成するDDLのテンプレートファイル名です。</td><td>"sql/create-schemainfo-table.ftl"</td><td>NO</td></tr>
					<tr><td>createUniqueKeyTemplateFileName</td><td>一意キーを作成するDDLのテンプレートファイル名です。</td><td>"sql/create-uniquekey.ftl"</td><td>NO</td></tr>
					<tr><td>createSequenceTemplateFileName</td><td>シーケンスを作成するDDLのテンプレートファイル名です。</td><td>"sql/create-sequence.ftl"</td><td>NO</td></tr>
					<tr><td>createForeignKeyTemplateFileName</td><td>外部キーを作成するDDLのテンプレートファイル名です。</td><td>"sql/create-foreignkey.ftl"</td><td>NO</td></tr>
					<tr><td>dropTableTemplateFileName</td><td>テーブルを削除するDDLのテンプレートファイル名です。</td><td>"sql/drop-table.ftl"</td><td>NO</td></tr>
					<tr><td>dropSchemaInfoTableTemplateFileName</td><td>スキーマ情報テーブルを削除するDDLのテンプレートファイル名です。</td><td>"sql/drop-schemainfo-table.ftl"</td><td>NO</td></tr>
					<tr><td>dropUniqueKeyTemplateFileName</td><td>一意キーを削除するDDLのテンプレートファイル名です。</td><td>"sql/drop-uniquekey.ftl"</td><td>NO</td></tr>
					<tr><td>dropSequenceTemplateFileName</td><td>シーケンスを削除するDDLのテンプレートファイル名です。</td><td>"sql/drop-sequence.ftl"</td><td>NO</td></tr>
					<tr><td>dropForeignKeyTemplateFileName</td><td>外部キーを削除するDDLのテンプレートファイル名です。</td><td>"sql/drop-foreignkey.ftl"</td><td>NO</td></tr>
					<tr><td>templateFileEncoding</td><td>テンプレートファイルのエンコーディングです。</td><td>"UTF-8"</td><td>NO</td></tr>
					<tr><td>templateFilePrimaryDir</td><td>テンプレートファイルを検索する際の優先ディレクトリです。</td><td>-</td><td>NO</td></tr>
					<tr><td>migrateDir</td><td>マイグレーション用のファイルを管理するディレクトリです。</td><td>"db/migrate"</td><td>NO</td></tr>
					<tr><td>ddlInfoFile</td><td>DDLのバージョン番号を管理するファイルです。</td><td>"db/ddl-info.txt"</td><td>NO</td></tr>
					<tr><td>versionNoPattern</td><td>バージョン番号のパターンです。バージョン番号に対応するディレクトリ名に使用されます。java.text.DecimalFormatで使用可能なパターンを指定できます。</td><td>"0000"</td><td>NO</td></tr>
					<tr><td>statementDelimiter</td><td>SQLステートメントの区切り文字です。</td><td>";"</td><td>NO</td></tr>
					<tr><td>schemaInfoFullTableName</td><td>スキーマのバージョンを管理するテーブル名です。</td><td>"SCHEMA_INFO"</td><td>NO</td></tr>
					<tr><td>schemaInfoColumnName</td><td>スキーマのバージョンを管理するカラム名です。</td><td>"VERSION"</td><td>NO</td></tr>
					<tr><td>tableOption</td><td>CREATE TABLE文の最後に付与されるオプションです。MySQLで、データベースのエンジンを指定する場合、たとえば、"ENGINE = INNODB"というように指定できます。</td><td>-</td><td>NO</td></tr>
					<tr><td>genDialectClassName</td><td>S2JDBC-Genのダイアレクトインタフェースの実装クラス名です。ここに指定するクラスはorg.seasar.extension.jdbc.gen.dialect.GenDialectインタフェースを実装している必要があります。指定しない場合は<a href="../s2jdbc_setup.html#ダイアレクト">S2JDBCのダイアレクト</a>に対応したデフォルトのクラスが使用されます。</td><td>-</td><td>NO</td></tr>
					<tr><td>configPath</td><td>JdbcManagerのコンポーネント定義を含む設定ファイルです。</td><td>"s2jdbc.dicon"</td><td>NO</td></tr>
					<tr><td>env</td><td>環境名です。</td><td>"ut"</td><td>NO</td></tr>
					<tr><td>jdbcManagerName</td><td>
					                        JdbcManagerのコンポーネント名です。</td><td>"jdbcManager"</td><td>NO</td></tr>
					<tr><td>factoryClassName</td><td>S2JDBC-Genの公開されたインタフェースの実装を作成するファクトリのクラス名です。S2JDBC-Genをカスタマイズする場合に独自のファクトリクラスを指定できます。ここに指定するクラスはorg.seasar.extension.jdbc.gen.internal.factory.Factoryインタフェースを実装している必要があります。</td><td>"org.seasar.extension.jdbc.gen<br />.internal.factory.FactoryImpl"</td><td>NO</td></tr>
					<tr><td>commandInvokerClassName</td><td>S2JDBC-Genのコマンドを呼び出すクラスの名前です。コマンドの呼び出し前後で任意の処理を実行したい場合に指定します。ここに指定するクラスはorg.seasar.extension.jdbc.gen.command.CommandInvokerインタフェースを実装している必要があります。</td><td>"org.seasar.extension.jdbc.gen<br />.internal.command.CommandInvokerImpl"</td><td>NO</td></tr>
					<tr><td>classpath</td><td>このタスクを実行する際のクラスパスです。</td><td>-</td><td>classpathrefが指定されていない場合YES</td></tr>
					<tr><td>classpathref</td><td>このタスクを実行する際のクラスパスの参照です。</td><td>-</td><td>classpathが指定されていない場合YES</td></tr>
				</table>
			</subsection>
			<subsection name="ネストした要素として指定されるパラメータ">
				<h4>
					jvmArg
				</h4>
				<p>
					このタスクの大部分の処理は別VMで行われます。VMに引数を渡す場合は&lt;jvmarg&gt;要素を使用します。
					これはAntのJavaタスクで使用できる&lt;jvmarg&gt;と同じです。
					使用可能な属性やネストした要素についてはAntのドキュメントを参照してください。
				</p>
			</subsection>
		</section>
		<section name="例">
			<subsection name="SQLのキーワードと識別子の大文字小文字を指定する">
				<p>
					sqlKeywordCaseType属性とsqlIdentifierCaseType属性に"uppercase"や"lowercase"といった値を指定することで、SQLのキーワード（CREATEやALTERなど）やSQLの識別子（テーブル名やカラム名）の大文字小文字を指定できます。
					たとえば、次のように指定できます。
				</p>
<source><![CDATA[<gen-ddl
    classpathDir="build/classes"
    rootPackageName="examples"
    sqlKeywordCaseType="lowercase"
    sqlIdentifierCaseType="uppercase"
    classpathRef="classpath"
/>]]></source>
				<p>
					sqlKeywordCaseType属性に"lowercase"とsqlIdentifierCaseType属性に"uppercase"を指定した場合、生成されるSQLは次のようになります。
				</p>
<source><![CDATA[create table HOGE (AAA varchar(255));]]></source>
			</subsection>
			<subsection name="独自のテンプレートファイルを使用する">
				<p>
					任意のディレクトリに独自のテンプレートファイルを置き、templateFilePrimaryDir属性にそのディレクトリを指定することで、
					独自のテンプレートファイルを使用できます。
				</p>
				<p>
					S2JDBC-Genのテンプレートは、配布ファイルのsrc/main/resources/org/seasar/extension/jdbc/gen/internal/generator/tempaltesディレクトリ以下にあります。
					ここでは、テーブルのcreate文のテンプレートを置き換える例を示します。
					テーブルのcreate文のテンプレートトはsql/create-table.ftlです。
					修正は、これをコピーして行うと良いでしょう。
				</p>
				<p>
					テンプレートファイルを格納するディレクトリをmytempletesとする場合、
					修正した独自テンプレートを使用するにはテンプレートをmytempletes/sql/create-table.ftlと配置し、templateFilePrimaryDir属性にmytempletesを指定します。
				</p>
<source><![CDATA[<gen-ddl
    classpathDir="build/classes"
    rootPackageName="examples"
    templateFilePrimaryDir="mytempletes"
    classpathRef="classpath"
/>]]></source>
				<p>
					mytempletes/my-create-table.ftlのように、テンプレートファイルを任意の名前で配置したい場合は、
					templateFilePrimaryDir属性に加え、createTableTemplateFileName属性も指定します。
				</p>
<source><![CDATA[<gen-ddl
    classpathDir="build/classes"
    rootPackageName="examples"
    templateFilePrimaryDir="mytempletes"
    createTableTemplateFileName="mytempletes/my-create-table.ftl"
    classpathRef="classpath"
/>]]></source>
			</subsection>
			<subsection name="MySQLでストレージエンジンを指定する">
				<p>
					MySQLでストレージエンジンを指定するには、tableOption属性を使用します。
					たとえば、ストレージエンジンにINNODBを使用するにはtableOption属性に次のように指定します。
				</p>
<source><![CDATA[<gen-ddl
    classpathDir="build/classes"
    rootPackageName="examples"
    tableOption="ENGINE = INNODB"
    classpathRef="classpath"
/>]]></source>
				<p>
					上記の定義でGen-Ddlタスクを実行すると次のようなDDLが生成されます。
				</p>
<source><![CDATA[create table HOGE (AAA varchar(255)) ENGINE = INNODB;]]></source>
			</subsection>
			<subsection name="バージョンディレクトリのパターンを指定する">
				<p>
					デフォルトでは、バージョン番号に対応するディレクトリの名前はバージョン番号が大きくなるにつれ、0000、0001、0002となります。
					バージョン番号の前に0をいくつ付与するかは、versionNoPattern属性で調整できます。
				</p>
<source><![CDATA[<gen-ddl
    classpathDir="build/classes"
    rootPackageName="examples"
    versionNoPattern="00000000"
    classpathRef="classpath"
/>]]></source>
				<p>
					上記の定義でGen-Ddlタスクを実行すると、バージョン番号に対応するディレクトリの名前はバージョン番号が大きくなるにつれ、00000000、00000001、00000002となります。
				</p>
			</subsection>
		</section>
	</body>
</document>
