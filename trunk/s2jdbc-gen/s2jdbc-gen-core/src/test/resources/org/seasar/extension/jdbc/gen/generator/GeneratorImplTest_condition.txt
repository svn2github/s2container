package hoge;

import java.util.Date;
import org.seasar.extension.jdbc.where.ComplexWhere;
import org.seasar.extension.jdbc.where.condition.AbstractEntityCondition;
import org.seasar.extension.jdbc.where.condition.NotNullableCondition;
import org.seasar.extension.jdbc.where.condition.NotNullableStringCondition;
import org.seasar.extension.jdbc.where.condition.NullableCondition;

public class FooCondition extends
        AbstractEntityCondition<FooCondition> {

    public FooCondition() {
    }

    public FooCondition(String prefix, ComplexWhere where) {
        super(prefix, where);
    }

    public NotNullableCondition<FooCondition, Integer> id =
        new NotNullableCondition<FooCondition, Integer>("id", this);

    public NotNullableStringCondition<FooCondition> name =
        new NotNullableStringCondition<FooCondition>("name", this);

    public NotNullableCondition<FooCondition, byte[]> lob =
        new NotNullableCondition<FooCondition, byte[]>("lob", this);

    public NullableCondition<FooCondition, Date> date =
        new NullableCondition<FooCondition, Date>("date", this);

    public NotNullableCondition<FooCondition, Integer> version =
        new NotNullableCondition<FooCondition, Integer>("version", this);

    public NotNullableCondition<FooCondition, Integer> barId =
        new NotNullableCondition<FooCondition, Integer>("barId", this);

    public BarCondition bar() {
        return new BarCondition(prefix + "bar.", where);
    } 
}